[mqtt]
; The maximum allowed length of MQTT messages.
max_packet_size = 1000000

; The maximum allowed length of Client ID string.
max_clientid_len = 65535

; The maximum allowed level of topics for client subscription. 0 means no limit.
max_topic_levels = 128

; The maximum allowed QoS level for client to publish[0, 1, 2]
max_qos_allowed = 2

; Whether to support Retain message.
retain_available = true

; Whether to support subscribing to wildcard topics
wildcard_subscription = true

; Whether to support subscribing to $usr/<username>/# private p2p topics
private_usr_subscription = true

; Whether to support subscribing to $usr/<clientid>/# private p2p topics
private_cid_subscription = true

; Whether to support shared subscriptions
shared_subscription = true

; Whether to ignore the message sent by itself. If it is ignored, it means that Broker will not deliver this message to the sender of the message
ignore_loop_deliver = false

; Whether to enable the strict check mode. The strict check mode will check the correctness of the MQTT message in more detail
strict_mode = false


[tcp]
enable = true
port = 1883
[tls]
enable = false
port = 8883
tls_ca_path = ""
tls_cert_path = ""
tls_key_path = ""
[ws]
enable = false
port = 80
[wss]
enable = false
port = 443
tls_ca_path = ""
tls_cert_path = ""
tls_key_path = ""

; auth module for connect packet
[auth]
plugin = memory
ttl = 0
max_tokens = 0

; 0.AuthDiscardOld(recommended)
; 1.AuthDiscardNew(deny new connect)
; don't change this value,otherwise you really know what's this parame
discard = 0

[auth.public]
enable = true
username = mqtt
password = public


[retain]
plugin = memory
[store]
plugin = memory


[session]
plugin = memory

; acl module for publish/subscribe packet
[acl]
plugin = memory

